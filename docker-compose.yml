services:
  # Next.js Frontend (Development Mode)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: novadom_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # Only mount source files, preserve node_modules and .next from container
      - ./frontend/app:/app/app
      - ./frontend/components:/app/components
      - ./frontend/lib:/app/lib
      - ./frontend/public:/app/public
      - ./frontend/next.config.ts:/app/next.config.ts
      - ./frontend/tailwind.config.ts:/app/tailwind.config.ts
      - ./frontend/postcss.config.mjs:/app/postcss.config.mjs
      - ./frontend/tsconfig.json:/app/tsconfig.json
      # Create named volumes for node_modules and .next to avoid conflicts
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    networks:
      - novadom_network
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - NEXT_TELEMETRY_DISABLED=1

  # FastAPI Backend (Simple Build)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: novadom_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - novadom_network
    env_file:
      - .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL with PostGIS
  db:
    image: postgis/postgis:15-3.3
    container_name: novadom_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - novadom_network
    env_file:
      - .env

  # Redis for caching (will be useful later)
  redis:
    image: redis:7-alpine
    container_name: novadom_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - novadom_network

volumes:
  postgres_data:
  redis_data:
  frontend_node_modules:
  frontend_next:

networks:
  novadom_network:
    driver: bridge 